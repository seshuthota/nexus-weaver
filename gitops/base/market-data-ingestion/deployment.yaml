apiVersion: apps/v1
kind: Deployment
metadata:
  name: market-data-ingestion
  labels:
    app: market-data-ingestion
    component: camel-service
    tier: ingestion
spec:
  replicas: 2
  selector:
    matchLabels:
      app: market-data-ingestion
  template:
    metadata:
      labels:
        app: market-data-ingestion
        component: camel-service
        tier: ingestion
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      serviceAccountName: market-data-ingestion-sa
      containers:
      - name: market-data-ingestion
        image: nexus-weaver/market-data-ingestion:clustered-v5
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: websocket
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "dev"
        - name: JAVA_OPTS
          value: "-XX:MaxRAMPercentage=80.0 -XX:+UseG1GC"
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30 